---
title: CSS Reset and ‘Sensible Defaults’
---
<p>Web Standards Advocates should really be called Zealots.  I am also guilty of punting Web Standards, sometimes with no sound reasoning behind my convictions.  This ‘blind faith’ led me to a point where one of my team members reigned me in and showed me the misinterpretation of my ways, and it had all to do with Reset CSS and my lack of ‘<em>Sensible Defaults</em>‘.<br>
<img src="/img/blog/sensible.jpg" alt="Roadmarkings pointing in different directions - an analogy for setting defaults"></p>

<h3>CSS Reset</h3>
<p><a href="http://meyerweb.com/">Eric Meyer</a> is one of the original Web Standards Gurus.  His work is good, and pure, and great time savers for us minions. Case in point: <a href="http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/">Eric’s work on reset.css</a>.</p>
<p>What reset.css essentially does is set a common foundation in all browsers by removing the browser’s default rendering of HTML elements.&nbsp; This makes it easier to author a web document so that it can look very similar in each separate browser.</p>

<h3>The problem</h3>
<p>I’ve been happily using reset.css on many projects, never noticing along the way the time I’ve spent on redefining margins on <code>&lt;ul&gt;</code> and <code>&lt;p&gt;</code> elements – time that could have been saved by defining a ‘<em>Sensible Default</em>‘.</p>
<p>Here’s an example…</p>
<% code('css') do %>
ul {margin:0; padding:0; list-style:none; /*etc*/}
<% end %>
<p>Reset.css would set all Unordered-Lists (<code>&lt;ul&gt;</code>) to have no margins, and no <code>list-style</code>.&nbsp; This was great for defining semantic menus in the navigation and footer blocks, but…<br>
the rule would cascade! (DUH!) and each time I wanted to have default rendering of a <code>&lt;ul&gt;</code> I’d have to define it explicitly.  This situation would be exacerbated for each case when an <code>&lt;ul&gt;</code> needed to be displayed as expected, e.g. in a sidebar:</p>
<% code('css') do %>
#sidebar ul {margin:1em 0 1em 2em; list-style:disc;}
<% end %>

<h3>The situation</h3>
<p>I started working with Christo on a Django web-app, where I basically had to handle the templates, HTML and CSS + Supporting Images.  I was using reset.css as normal.<br>
Christo started voicing his frustrations with having to rely on me to define each and every case where a paragraph was needing margins, or an unordered-list was missing its bullets.  It came down to a point where he asked me to remove reset.css.  My Standards Zeal kicked in and I refused it, saying I’d have to create more exceptions than the rule by not using reset.css.<br>
It ended up in a stalemate, so I thought I’d open up the dialogue to the <a href="http://stackoverflow.com/">StackOverflow</a> audience.  <a href="http://stackoverflow.com/questions/2281766/generic-vs-specific-element-styles-for-maintainability">I put together a quick question</a> and waited 24 hours for the answers to roll in.</p>

<h3>Enter: Sensible Defaults</h3>
<p>It turns out that the practice of defining Sensible Defaults is a common Programming tip. (This just goes to show my lack of formal programming experience!)  <a href="http://idunno.org/archive/2006/01/03/242.aspx">Defaults can save a lot of headaches</a>, and this situation of mine was no different.</p>

<h3>The solution</h3>
<p>Christo and I met half way by overriding the Reset rules just for the content area.</p>
<% code('css') do %>
#content ul {margin:1em 0 1em 2em; list-style:disc;}
#content p {margin:1em 0;}
/* etc */
<% end %>
<p>This way I could rely on Reset.css to ease the styling of header and footer elements, and then <em>reset the reset</em> by providing default styling to any content items such as paragraphs and unordered-lists.</p>

<h3>TLDR? A warning as a conclusion</h3>
<p>So, if you want to use reset.css then please, do The Right Thing™:</p>
<ul>
  <li>Don’t be an idiot and implement something without understanding it</li>
  <li>Define sensible defaults for where they’re needed.</li>
</ul>
<p>That is all.</p>
