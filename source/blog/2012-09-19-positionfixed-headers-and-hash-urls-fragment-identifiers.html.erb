---
title: position:fixed; headers and hash URLs / fragment identifiers
---

<p>I came across an interesting problem today while working with a fixed header and a hash-URL or fragment identifier URL. When loading a URL with a fragment identifier, the fixed header can obscure the content you’re linking too; not great.</p>
<p>Some of the suggested fixes on the web are a little short-sighted – I might have a more elegant solution, but it’s still not bullet-proof.</p>

<section>
  <h2>What’s a fragment identifier?</h2>
  <p>Think of a <a href="http://en.wikipedia.org/wiki/Fragment_identifier">fragment identifier</a> as a nifty tool to create a shortcut to a specific section or fragment of the HTML document. Fragment identifiers can be appended to URLs by first using a hash (#) symbol as a prefix.<br>
  Traditionally, to mark-up the fragment in a document, you’d use empty anchors as a fragment identifier, such as:</p>
<% code('html') do %>
<a name="navigation"></a>
<% end %>
  <p>…but <strong>you can use any ID-ref in a web document as a fragment identifier</strong>. The W3C use this to great effect in their tomes of specs, such as in this example: <a href="http://www.w3.org/TR/html5/the-a-element.html#the-a-element">www.w3.org/TR/html5/the-a-element.html#the-a-element</a>.</p>
</section>

<section>
  <h2>The problem</h2>
  <p>When using a fixed position header, any fragment URLs or using links that reference fragments, the header can obscure the content you’re linking to – this is well explained on <a href="http://nicolasgallagher.com/jump-links-and-viewport-positioning/">@necolas’ blog post</a>.</p>
</section>

<section>
  <h2>The possible fixes</h2>
  <p>Some of the suggested fixes available on the web don’t apply to any ID reference, or are a bit tardy. One of the better solutions proposed by <a href="http://css-tricks.com/hash-tag-links-padding/">CSS-tricks</a> (and <a href="https://twitter.com/necolas">@necolas</a>) suggested <a href="http://nicolasgallagher.com/jump-links-and-viewport-positioning/demo/">using the <code>::before</code> pseudo-element to create an offset height</a> equal to the height of the fixed header (e.g. 285px) as such:</p>
<% code('css') do %>
h2:before {
  display: block;
  content: " ";
  margin-top: -285px;
  height: 285px;
  visibility: hidden;
}
<% end %>
  <p>One major drawback here is you’d have to add a selector for each possible fragment identifier use. In this case, the fix would only apply to fragment identifiers in <code>&lt;h2&gt;</code>s.</p>
  <p>The second drawback is that this applies to all <code>&lt;h2&gt;</code>s regardless as to whether they’re being used as fragment identifiers or not.</p>
</section>

<section>
  <h2>Enter: <code>:target</code></h2>
  <p>The <code>:before</code> and <code>:after</code> Pseudo-elements don’t work in IE8 or less.  If IE8 or less is not your concern, then you could use the CSS3 selector: <code>:target</code> to overcome both drawbacks as such:</p>
<% code('css') do %>
*:target::before {
  display: block;
  content: " ";
  margin-top: -285px;
  height: 285px;
  visibility: hidden;
}
<% end %>
  <p><strong>Note:</strong> This is not a fix for the shortcomings outlined in @necolas’ article, it just makes your use of selectors more efficient.</p>
</section>

<section>
  <h2>Thoughts</h2>
  <p>IMO, <code>position:fixed;</code> is more trouble than its worth,  especially when mixed into a mobile context, browser support is still sparse.  We wouldn’t be in this fragment-identifier-target mess if it wasn’t for position:fixed.</p>
  <p>It feels like the whole position:fixed implementation is poor in general.  If you want to see browser weirdness, start messing with position:fixed.  It’s a jungle out there folks.</p>
</section>
